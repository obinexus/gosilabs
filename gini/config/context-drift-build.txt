# OBINexus Context Drift Mitigation Build Configuration
# Replaces "polybuild" concept with direct state management

project:
  name: "Context Drift Mitigation System"
  version: "1.0.0"
  session_continuity: true
  constitutional_compliance: true

# DFA State Machine Configuration
dfa_machine:
  type: "Deterministic Finite Automaton"
  states:
    - INIT         # Initial state
    - WORKING      # Active development
    - PAUSED       # Context preserved
    - DRIFTING     # Drift detected
    - COLLAPSED    # Critical failure
    - RECOVERED    # Recovery successful
  
  transitions:
    - from: INIT
      to: WORKING
      condition: "user_active"
      action: "load_context"
    
    - from: WORKING
      to: PAUSED
      condition: "user_idle || time_limit"
      action: "preserve_context"
    
    - from: PAUSED
      to: WORKING
      condition: "user_returns"
      action: "resume_context"
    
    - from: WORKING
      to: DRIFTING
      condition: "drift_threshold_exceeded"
      action: "alert_drift"
    
    - from: DRIFTING
      to: RECOVERED
      condition: "correction_applied"
      action: "stabilize"

# Control-Collapse Derivatives (3rd/4th order)
derivatives:
  position:
    description: "Current context position in state space"
    type: float64
    initial: 0.0
  
  velocity:
    description: "dx/dt - Rate of context change"
    type: float64
    threshold: 10.0
  
  acceleration:
    description: "d²x/dt² - Context change acceleration"
    type: float64
    threshold: 5.0
  
  control:
    description: "d³x/dt³ - Control ceiling indicator"
    type: float64
    ceiling: 0.001  # When ~0, control ceiling reached
  
  collapse:
    description: "d⁴x/dt⁴ - System collapse predictor"
    type: float64
    critical: 10.0   # Above this = imminent collapse

# Context Preservation Strategy
preservation:
  method: "snapshot"
  format: "json"
  compression: false  # Keep readable for debugging
  
  storage:
    primary: "filesystem"
    backup: "memory"
    
  snapshot_triggers:
    - "manual_pause"
    - "idle_timeout"
    - "drift_detection"
    - "collapse_warning"
    - "session_end"
  
  snapshot_contents:
    - "dfa_state"
    - "context_map"
    - "derivatives"
    - "zen_line"      # Python Zen principle tracker
    - "timestamp"
    - "consciousness_level"

# Resume Strategy (Top-Down vs Bottom-Up)
resume_strategy:
  default: "top_down"
  
  top_down:
    description: "Start from high-level state and work down"
    steps:
      1: "Load latest snapshot"
      2: "Restore DFA state"
      3: "Apply context map"
      4: "Validate derivatives"
      5: "Check consciousness threshold"
  
  bottom_up:
    description: "Rebuild from primitives when drift is high"
    steps:
      1: "Initialize base state"
      2: "Load primitive values"
      3: "Reconstruct context incrementally"
      4: "Reset derivatives to safe values"
      5: "Gradually restore full state"
  
  auto_select:
    condition: "drift_metric"
    threshold: 0.046  # Switch to bottom-up above 4.6% drift

# Drift Mitigation Parameters
drift_mitigation:
  decay_rate: 0.001  # 0.1% per second
  
  consciousness:
    threshold: 0.954  # 95.4% OBINexus requirement
    calculation:
      - "zen_alignment"     # Which Zen principle (1-20)
      - "drift_penalty"     # Based on pause duration
      - "derivative_penalty" # Based on instability
  
  correction_methods:
    low_drift:    # < 5%
      - "dampen_velocity"
      - "maintain_state"
    
    medium_drift: # 5-10%
      - "reset_derivatives"
      - "reload_context"
      - "validate_state"
    
    high_drift:   # > 10%
      - "emergency_preserve"
      - "full_reset"
      - "bottom_up_rebuild"

# Python Zen Integration ("import this")
zen_integration:
  enabled: true
  principles_count: 20
  
  mapping:
    0: "The Zen of Python foundation"
    1: "Beautiful is better than ugly"
    2: "Explicit is better than implicit"
    3: "Simple is better than complex"
    7: "Readability counts"
    10: "Errors should never pass silently"
    11: "Unless explicitly silenced"
    19: "Namespaces are one honking great idea"
  
  drift_corrections:
    high_drift: 3    # Jump to "Simple is better than complex"
    medium_drift: 7  # Jump to "Readability counts"
    low_drift: null  # Continue current principle

# Monitoring Configuration
monitoring:
  enabled: true
  interval_ms: 1000
  
  metrics:
    - "consciousness_level"
    - "drift_metric"
    - "derivative_values"
    - "state_transitions"
    - "snapshot_count"
  
  alerts:
    consciousness_low:
      threshold: 0.9
      action: "warn"
    
    consciousness_critical:
      threshold: 0.8
      action: "auto_pause"
    
    collapse_imminent:
      condition: "collapse > 10.0"
      action: "emergency_preserve"

# Build Commands (replacing polybuild concept)
build:
  compile_go:
    command: "go build -o drift_monitor context_preserve.go"
    flags: ["-race", "-ldflags=-s -w"]
  
  compile_python:
    command: "python -m py_compile zen_context.py"
    output: "__pycache__/zen_context.pyc"
  
  link_libraries:
    libpolycall: "/usr/local/lib/libpolycall.so"
    rift_runtime: "${RIFT_HOME}/lib/rift.so"
  
  package:
    format: "tar.gz"
    contents:
      - "drift_monitor"
      - "zen_context.py"
      - "context_*.json"
      - "drift_build.yaml"

# Deployment
deployment:
  auto_start: true
  restart_on_crash: true
  
  systemd_service: |
    [Unit]
    Description=OBINexus Context Drift Monitor
    After=network.target
    
    [Service]
    Type=simple
    ExecStart=/usr/local/bin/drift_monitor
    Restart=on-failure
    RestartSec=10
    User=obinexus
    
    [Install]
    WantedBy=multi-user.target

# Session Management
session:
  id_format: "${USER}_${HOSTNAME}_${TIMESTAMP}"
  max_pause_duration: 86400  # 24 hours
  
  cleanup:
    old_snapshots: 7  # days
    max_snapshots: 100
    
  recovery:
    attempt_order:
      1: "latest_snapshot"
      2: "previous_snapshot"
      3: "clean_slate"

# Constitutional Compliance
compliance:
  framework_version: "1.0.0"
  articles:
    - "Article V: Human Rights & Disability Protection"
    - "Article III: Investment Protection"
    - "Article VII: #NoGhosting Protocol"
  
  requirements:
    - "Maintain 95.4% consciousness threshold"
    - "Preserve context on all transitions"
    - "No silent failures"
    - "Human-in-the-loop for critical decisions"

# Output Messages
messages:
  startup: |
    ╔═══════════════════════════════════════════════════════╗
    ║     OBINexus Context Drift Mitigation System         ║
    ║     Session Continuity: ACTIVE                       ║
    ║     Consciousness Threshold: 95.4%                   ║
    ║     Computing from the Heart ❤️                       ║
    ╚═══════════════════════════════════════════════════════╝
  
  pause: "Context preserved - drift mitigation active"
  resume: "Context restored - consciousness level: {level}%"
  drift_warning: "⚠️ Context drift detected: {drift}%"
  collapse_warning: "🚨 CRITICAL: Collapse imminent"